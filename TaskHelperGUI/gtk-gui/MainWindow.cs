
// This file has been generated by the GUI designer. Do not modify.
using Managers;
using DataContracts;
using System.Collections.Generic;
using Gtk;
using System;
using Gdk;

public partial class MainWindow
{
	private global::Gtk.VBox vbox1;

	//private global::Gtk.VBox vboxWithExpander;
	
	private global::Gtk.ComboBox combobox1;
	
	private global::Gtk.HBox hbox1;
	
	//private global::Gtk.Expander expander3;
	
	//private global::Gtk.Label GtkLabel1;

	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("MainWindow");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.vbox1 = new global::Gtk.VBox ();
		this.vbox1.Name = "vbox1";
		this.vbox1.Spacing = 6;
		// Container child vbox1.Gtk.Box+BoxChild
		this.combobox1 = global::Gtk.ComboBox.NewText ();
		this.combobox1.Name = "combobox1";
		this.vbox1.Add (this.combobox1);
		global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.combobox1]));
		w1.Position = 0;
		w1.Expand = false;
		w1.Fill = false;


		// Container child vbox1.Gtk.Box+BoxChild
		//this.hbox1 = new global::Gtk.HBox ();
		//this.hbox1.Name = "hbox1";
		//this.hbox1.Spacing = 6;


		// Container child vbox1.Gtk.Box+BoxChild
		//this.vboxWithExpander = new global::Gtk.VBox ();
		//this.vboxWithExpander.Name = "vboxWithExpander";
		//this.vboxWithExpander.Spacing = 6;

		//this.hbox1.Add (this.vboxWithExpander);

		// Container child hbox1.Gtk.Box+BoxChild
		//this.expander3 = new global::Gtk.Expander (null);
		//this.expander3.CanFocus = true;
		//this.expander3.Name = "expander3";
		//this.GtkLabel1 = new global::Gtk.Label ();
		//this.GtkLabel1.Name = "GtkLabel";
		//this.GtkLabel1.LabelProp = global::Mono.Unix.Catalog.GetString ("GtkExpander");
		//this.GtkLabel1.UseUnderline = true;
		//this.expander3.LabelWidget = this.GtkLabel1;

		//for(int i=0; i<32; ++i)

		List<Task> Tasks = new TaskManager().FindAll ();
		foreach (Task task in Tasks) 
		{
			//vboxWithExpander.PackStart (createTaskExpander (task.Name, "Short Description"), false, false, 0);
			vbox1.PackStart (createTaskExpander (task.Name, "Short Description"), false, false, 0);
		}
		//this.vboxWithExpander.Add (this.expander3);



		//global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.expander3]));
		//w2.Position = 0;
		//w2.Expand = false;
		//w2.Fill = false;
		this.vbox1.Add (this.hbox1);
		global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.hbox1]));
		w3.Position = 1;
		this.Add (this.vbox1);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 518;
		this.DefaultHeight = 468;
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);



		List<TaskGroup> Groups = new TaskGroupManager().FindAll ();
		foreach (TaskGroup group in Groups) 
		{
			this.combobox1.AppendText (group.Name);
		}

		//List<Task> Tasks = new TaskManager().FindAll ();
		//foreach (Task task in Tasks) 
		//{
			//Gtk.Label GtkLabel = new Gtk.Label ();
			//GtkLabel.Name = "GtkLabel" + task.Name;
			//GtkLabel.LabelProp = task.Name;
			//GtkLabel.UseUnderline = true;
			//this.expander3.LabelWidget = this.GtkLabel;

			//this.expander3.Add (GtkLabel);

//			Gtk.Button button = Gtk.Button (label = "Button");
//			button.set_size_request (100, 100);
//			expander.add (button);

			//this.expander3.Add (new Gtk.Label ("Test"));
		//}
	}


	private static Widget createTaskExpander(string TaskName, string TaskDescription)
	{
		//bool useExpander = true;

		//eventbox1.GdkWindow.Events = eventbox1.GdkWindow.Events | Gdk.EventMask.ButtonPressMask;

		//EventBox StartDoneEventBox = new EventBox ();
		//Button button = new Button("Start/Done");
		//button.WidthRequest = 800;
		//StartDoneEventBox.Add (button);
		//StartDoneEventBox.ButtonPressEvent += new ButtonPressEventHandler(ButtonPressHandler);

		Button button = new Button("Start/Done");
		button.WidthRequest = 800;
		button.Name = TaskName;
		button.Clicked += TaskStartDoneButtonClicked;

		//if(useExpander) {

		Expander expander = new Expander(TaskName);

		expander.Add(button);

			return expander;
		//} else {
		//	return button;
		//}
	}

	private static void ButtonPressHandler(object obj, ButtonPressEventArgs args) 
	{
		// single click
		if (args.Event.Type == EventType.ButtonPress) {
				
		}
		// double click
		if (args.Event.Type == EventType.TwoButtonPress) {
				
		}

		// the left button was used
		if (args.Event.Button == 1) {
				
		}
	}

	/* Our usual callback function */
	static void TaskStartDoneButtonClicked( object obj, EventArgs args)
	{
		Button button = (Button)obj;
		Console.WriteLine("Hello again - cool button was pressed" + button.Name);
	}
}
